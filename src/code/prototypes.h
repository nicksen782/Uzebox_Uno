static void _emu_whisper(int port, u8 val);
void clear_debug_showDebugData();
void debug_showDebugData();
void errorHandler(enum errorTypes error);
void pre_VsyncCallBack();
void updateIndividualTimers();
void post_VsyncCallBack();
void getInputs();
void N782_print(int x,int y,const char *string, u8 fromRam);
void N782_print_u8(int x,int y, u8 num);
void N782_print_u16(int x,int y, u16 num);
void gameInit();
void drawGameBoard();
void rotateRamTile_n90(u8 mat[8][8]);
void swapColors_ramtile(u8 srcColor, u8 dstColor, u8 ramtile_id);
void clearRamtile( u8 id, u8 newColor);
u8 tileIsDuplicateOf(u8 ramtile_id);
void removeCard_sm(u8 player, u8 position);
void removeCard_lg();
void removeUnusedRamtilesInTilemap(u8 *map);
void returnDiscardsToDrawPile();
void resetTheDeck();
void setVramTilemap(u8 x, u8 y, u8 w, u8 h, u8 *map);
void DrawMap_vramtiles(u8 x,u8 y, u8 *map);
void drawCard( u8 playerNum, u8 x, u8 y, u8 size, u8 value, u8 color);
void MapSprite2_nra( u8 startSprite, const char *map, u8 spriteFlags );
int getRandomNumber(int min, int max);
u8 countPlayerCards(u8 playerNum);
u8 countDrawPile();
u8 countDiscardPile();
u8 countUsedRamtile_ids();
u8 countAvailableRamtile_ids();
void redrawUnderDrawPile();
void redrawUnderDiscardPile();
void returnCardsForPlayer(u8 playerNum);
void displayCardsForPlayer(u8 playerNum, u8 startPos, u8 cardDelay);
void removePlayerCards(u8 playerNumber);
void clearbgmessage();
u8 getCardFromDrawPile(u8 playerNum, u8 howMany);
void test_testgame();
void dealSpecifiedCard_anim(u8 playerNum, u8 cardIndex, u8 cardPos, u8 cardDelay, u8 option);
void newGameSetup();
void redrawMainInfoRegion();
void get_cardDims_byPlayerAndCardPosition(u8 playerNum, u8 position, u8 *x, u8 *y);
void updatePlayerDisplayedData();
void gstate_title1();
void gstate_title2();
void gstate_title_main();
void gstate_playing();
int main();